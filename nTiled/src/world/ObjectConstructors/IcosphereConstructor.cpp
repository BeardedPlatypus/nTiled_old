#include "world\ObjectConstructors.h"

namespace nTiled {
namespace world {

IcosphereConstructor::IcosphereConstructor(World& world) : world(world) {
  std::vector<glm::vec4> vertices_sphere = {
    glm::vec4(0, -1, 0, 1),
    glm::vec4(0.723607, -0.44722, 0.525725, 1),
    glm::vec4(-0.276388, -0.44722, 0.850649, 1),
    glm::vec4(-0.894426, -0.447216, 0, 1),
    glm::vec4(-0.276388, -0.44722, -0.850649, 1),
    glm::vec4(0.723607, -0.44722, -0.525725, 1),
    glm::vec4(0.276388, 0.44722, 0.850649, 1),
    glm::vec4(-0.723607, 0.44722, 0.525725, 1),
    glm::vec4(-0.723607, 0.44722, -0.525725, 1),
    glm::vec4(0.276388, 0.44722, -0.850649, 1),
    glm::vec4(0.894426, 0.447216, 0, 1),
    glm::vec4(0, 1, 0, 1),
    glm::vec4(-0.162456, -0.850654, 0.499995, 1),
    glm::vec4(0.425323, -0.850654, 0.309011, 1),
    glm::vec4(0.262869, -0.525738, 0.809012, 1),
    glm::vec4(0.850648, -0.525736, 0, 1),
    glm::vec4(0.425323, -0.850654, -0.309011, 1),
    glm::vec4(-0.52573, -0.850652, 0, 1),
    glm::vec4(-0.688189, -0.525736, 0.499997, 1),
    glm::vec4(-0.162456, -0.850654, -0.499995, 1),
    glm::vec4(-0.688189, -0.525736, -0.499997, 1),
    glm::vec4(0.262869, -0.525738, -0.809012, 1),
    glm::vec4(0.951058, 0, 0.309013, 1),
    glm::vec4(0.951058, 0, -0.309013, 1),
    glm::vec4(0, 0, 1, 1),
    glm::vec4(0.587786, 0, 0.809017, 1),
    glm::vec4(-0.951058, 0, 0.309013, 1),
    glm::vec4(-0.587786, 0, 0.809017, 1),
    glm::vec4(-0.587786, 0, -0.809017, 1),
    glm::vec4(-0.951058, 0, -0.309013, 1),
    glm::vec4(0.587786, 0, -0.809017, 1),
    glm::vec4(0, 0, -1, 1),
    glm::vec4(0.688189, 0.525736, 0.499997, 1),
    glm::vec4(-0.262869, 0.525738, 0.809012, 1),
    glm::vec4(-0.850648, 0.525736, 0, 1),
    glm::vec4(-0.262869, 0.525738, -0.809012, 1),
    glm::vec4(0.688189, 0.525736, -0.499997, 1),
    glm::vec4(0.162456, 0.850654, 0.499995, 1),
    glm::vec4(0.52573, 0.850652, 0, 1),
    glm::vec4(-0.425323, 0.850654, 0.309011, 1),
    glm::vec4(-0.425323, 0.850654, -0.309011, 1),
    glm::vec4(0.162456, 0.850654, -0.499995, 1)
  };

  std::vector<glm::vec3> normals_sphere = {
    glm::vec3(1.99974e-05, -0.9435, 0),
    glm::vec3(0.68274, -0.42196, 0.49602),
    glm::vec3(-0.26078, -0.42196, 0.8026),
    glm::vec3(-0.8439, -0.42196, 0),
    glm::vec3(-0.26078, -0.42196, -0.8026),
    glm::vec3(0.68274, -0.42196, -0.49602),
    glm::vec3(0.26078, 0.42196, 0.8026),
    glm::vec3(-0.68274, 0.42196, 0.49602),
    glm::vec3(-0.68274, 0.42196, -0.49602),
    glm::vec3(0.26078, 0.42196, -0.8026),
    glm::vec3(0.8439, 0.42196, 0),
    glm::vec3(-1.99974e-05, 0.9435, 0),
    glm::vec3(-0.15275, -0.799967, 0.470183),
    glm::vec3(0.399983, -0.799967, 0.290583),
    glm::vec3(0.2472, -0.494417, 0.7608),
    glm::vec3(0.79995, -0.494417, 0),
    glm::vec3(0.399983, -0.799967, -0.290583),
    glm::vec3(-0.494367, -0.799967, 4.96705e-09),
    glm::vec3(-0.647167, -0.494417, 0.470183),
    glm::vec3(-0.15275, -0.799967, -0.470183),
    glm::vec3(-0.647167, -0.494417, -0.470183),
    glm::vec3(0.2472, -0.494417, -0.7608),
    glm::vec3(0.894383, 4.96705e-09, 0.290583),
    glm::vec3(0.894383, 0, -0.290583),
    glm::vec3(4.96705e-09, 4.96705e-09, 0.9404),
    glm::vec3(0.552767, 0, 0.7608),
    glm::vec3(-0.894383, 4.96705e-09, 0.290583),
    glm::vec3(-0.552767, 0, 0.7608),
    glm::vec3(-0.552767, 4.96705e-09, -0.7608),
    glm::vec3(-0.894383, 0, -0.290583),
    glm::vec3(0.552767, 4.96705e-09, -0.7608),
    glm::vec3(-2.48353e-09, 0, -0.9404),
    glm::vec3(0.647167, 0.494417, 0.470183),
    glm::vec3(-0.2472, 0.494417, 0.7608),
    glm::vec3(-0.79995, 0.494417, 0),
    glm::vec3(-0.2472, 0.494417, -0.7608),
    glm::vec3(0.647167, 0.494417, -0.470183),
    glm::vec3(0.15275, 0.799967, 0.470183),
    glm::vec3(0.494367, 0.799967, 4.96705e-09),
    glm::vec3(-0.399983, 0.799967, 0.290583),
    glm::vec3(-0.399983, 0.799967, -0.290583),
    glm::vec3(0.15275, 0.799967, -0.470183),
  };

  std::vector<glm::tvec3<glm::u32>> elements_sphere = {
    glm::tvec3<glm::u32>(0, 13, 12),
    glm::tvec3<glm::u32>(1, 13, 15),
    glm::tvec3<glm::u32>(0, 12, 17),
    glm::tvec3<glm::u32>(0, 17, 19),
    glm::tvec3<glm::u32>(0, 19, 16),
    glm::tvec3<glm::u32>(1, 15, 22),
    glm::tvec3<glm::u32>(2, 14, 24),
    glm::tvec3<glm::u32>(3, 18, 26),
    glm::tvec3<glm::u32>(4, 20, 28),
    glm::tvec3<glm::u32>(5, 21, 30),
    glm::tvec3<glm::u32>(1, 22, 25),
    glm::tvec3<glm::u32>(2, 24, 27),
    glm::tvec3<glm::u32>(3, 26, 29),
    glm::tvec3<glm::u32>(4, 28, 31),
    glm::tvec3<glm::u32>(5, 30, 23),
    glm::tvec3<glm::u32>(6, 32, 37),
    glm::tvec3<glm::u32>(7, 33, 39),
    glm::tvec3<glm::u32>(8, 34, 40),
    glm::tvec3<glm::u32>(9, 35, 41),
    glm::tvec3<glm::u32>(10, 36, 38),
    glm::tvec3<glm::u32>(38, 41, 11),
    glm::tvec3<glm::u32>(38, 36, 41),
    glm::tvec3<glm::u32>(36, 9, 41),
    glm::tvec3<glm::u32>(41, 40, 11),
    glm::tvec3<glm::u32>(41, 35, 40),
    glm::tvec3<glm::u32>(35, 8, 40),
    glm::tvec3<glm::u32>(40, 39, 11),
    glm::tvec3<glm::u32>(40, 34, 39),
    glm::tvec3<glm::u32>(34, 7, 39),
    glm::tvec3<glm::u32>(39, 37, 11),
    glm::tvec3<glm::u32>(39, 33, 37),
    glm::tvec3<glm::u32>(33, 6, 37),
    glm::tvec3<glm::u32>(37, 38, 11),
    glm::tvec3<glm::u32>(37, 32, 38),
    glm::tvec3<glm::u32>(32, 10, 38),
    glm::tvec3<glm::u32>(23, 36, 10),
    glm::tvec3<glm::u32>(23, 30, 36),
    glm::tvec3<glm::u32>(30, 9, 36),
    glm::tvec3<glm::u32>(31, 35, 9),
    glm::tvec3<glm::u32>(31, 28, 35),
    glm::tvec3<glm::u32>(28, 8, 35),
    glm::tvec3<glm::u32>(29, 34, 8),
    glm::tvec3<glm::u32>(29, 26, 34),
    glm::tvec3<glm::u32>(26, 7, 34),
    glm::tvec3<glm::u32>(27, 33, 7),
    glm::tvec3<glm::u32>(27, 24, 33),
    glm::tvec3<glm::u32>(24, 6, 33),
    glm::tvec3<glm::u32>(25, 32, 6),
    glm::tvec3<glm::u32>(25, 22, 32),
    glm::tvec3<glm::u32>(22, 10, 32),
    glm::tvec3<glm::u32>(30, 31, 9),
    glm::tvec3<glm::u32>(30, 21, 31),
    glm::tvec3<glm::u32>(21, 4, 31),
    glm::tvec3<glm::u32>(28, 29, 8),
    glm::tvec3<glm::u32>(28, 20, 29),
    glm::tvec3<glm::u32>(20, 3, 29),
    glm::tvec3<glm::u32>(26, 27, 7),
    glm::tvec3<glm::u32>(26, 18, 27),
    glm::tvec3<glm::u32>(18, 2, 27),
    glm::tvec3<glm::u32>(24, 25, 6),
    glm::tvec3<glm::u32>(24, 14, 25),
    glm::tvec3<glm::u32>(14, 1, 25),
    glm::tvec3<glm::u32>(22, 23, 10),
    glm::tvec3<glm::u32>(22, 15, 23),
    glm::tvec3<glm::u32>(15, 5, 23),
    glm::tvec3<glm::u32>(16, 21, 5),
    glm::tvec3<glm::u32>(16, 19, 21),
    glm::tvec3<glm::u32>(19, 4, 21),
    glm::tvec3<glm::u32>(19, 20, 4),
    glm::tvec3<glm::u32>(19, 17, 20),
    glm::tvec3<glm::u32>(17, 3, 20),
    glm::tvec3<glm::u32>(17, 18, 3),
    glm::tvec3<glm::u32>(17, 12, 18),
    glm::tvec3<glm::u32>(12, 2, 18),
    glm::tvec3<glm::u32>(15, 16, 5),
    glm::tvec3<glm::u32>(15, 13, 16),
    glm::tvec3<glm::u32>(13, 0, 16),
    glm::tvec3<glm::u32>(12, 14, 2),
    glm::tvec3<glm::u32>(12, 13, 14),
    glm::tvec3<glm::u32>(13, 1, 14)
  };

  int i = this->world.addMesh(Mesh(vertices_sphere,
                                   normals_sphere,
                                   std::vector<glm::vec3>(),
                                   elements_sphere));
  this->icosphere = this->world.getMeshPointer(i);
}

Object* IcosphereConstructor::add(const std::string& name,
                                  pipeline::ShaderKey shader_key,
                                  glm::mat4 transformationMatrix) {
  int i = this->world.addObject(Object(name,
                                       *(this->icosphere),
                                       shader_key,
                                       transformationMatrix));
  return this->world.getObjectPointer(i);
}

} // world
} // nTiled